"use client";
import React from "react";
import Image from "next/image";
import InteractionIcons from "@/app/components/InteractionIcon";
import { db } from "@/utils/db";
import { useState } from "react";
import { clsx } from "clsx";
import {
  Card,
  CardTitle,
  CardContent,
  CardFooter,
  CardHeader,
  CardDescription,
} from "@/components/ui/card";
import { GiUltrasound } from "react-icons/gi";
import { PiUserSound } from "react-icons/pi";

export default function VoiceOfDay({ data }) {
  const [isSpeaking, setIsSpeaking] = useState(false);

  // Function to handle text-to-speech
  const handlePlayText = () => {
    const synth = window.speechSynthesis;
    const utterance = new SpeechSynthesisUtterance(data.content);

    if (synth.speaking) {
      synth.cancel();
      setIsSpeaking(false);
      return;
    }

    synth.speak(utterance);
    setIsSpeaking(true);

    utterance.onend = () => setIsSpeaking(false);
  };

  // console.log("The voice of the day day data", data);
  const userotd = data.username;
  // const contotd = data.content;
  // console.log(data.username, data.content);

  return (
    <div className="max-w-4xl mx-auto mt-6 pb-2">
      <Card className="bg-white shadow-lg rounded-lg overflow-hidden border border-gray-200">
        {/* <div className="container mx-auto max-w-4xl "> */}
        <CardHeader className="flex-row items-center align-center justify-between p-4 bg-gray-50">
          <CardTitle className="text-lg font-bold text-gray-700 items-center text-center">
            <h3>Voice of the Day</h3>
          </CardTitle>

          <div className="inline-block text-center rounded-full p-1 bg-green-600 text-white">
            <PiUserSound size={24} className={clsx("hover:text-orange-600")} />
          </div>
        </CardHeader>
        <CardContent className="p-6 text-center">
          <p>{data.content}</p>
        </CardContent>
        {/* <h3 className="text-xl font-bold text-800 mb-4 text-lime-400 text-center">
          Voice of the Day: {data.username}
          {/* {data.username} */}
        {/* </h3> */}
        {/* </div> */}
        <CardFooter className="bg-gray-100 p-2 items-right justify-between">
          <CardDescription>
            <div className="flex items-center">
              <button className="flex items-center justify-center bg-[#022a22] text-white w-8 h-8 rounded-full shadow-md">
                <span className="text-sm text-center font-semibold w-4 h-4 mr-0 mb-1 hover:text-[#c1a0e0]">
                  {data.amplifiers_count}
                </span>
              </button>
              <GiUltrasound
                size={24}
                className={clsx({ "text-orange-600": isSpeaking })}
              />
              {/* <button className="flex items-center justify-center text-white w-8 h-8 rounded-full shadow-md">
                <img
                  src="/ampicon.svg"
                  alt="amp button"
                  className="w-8 h-8 mr-1 items-center"
                  color="black"
                />
              </button> */}
            </div>
          </CardDescription>
          <div className="bg-gray-100 p-2 items-right">
            <p className="text-gray-700 font-semibold text-sm text-right">
              Voiced by:
              <span className="text-green-600">{data.username}</span>
            </p>
          </div>
        </CardFooter>
        {/* <InteractionIcons /> */}
      </Card>
    </div>
  );
}

// amps keys del keys:
 <DeleteButton key={voice.voice_id} voiceId={voice.voice_id} />
                <AmpButtons voiceId={voice.voice_id} />